<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>重剑无锋</title>
  
  <subtitle>大巧不工</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lovelimei.cn:4000/"/>
  <updated>2019-04-10T06:01:58.658Z</updated>
  <id>http://lovelimei.cn:4000/</id>
  
  <author>
    <name>DesertSnow</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Custom ClassLoader</title>
    <link href="http://lovelimei.cn:4000/2019/04/10/Custom-ClassLoader/"/>
    <id>http://lovelimei.cn:4000/2019/04/10/Custom-ClassLoader/</id>
    <published>2019-04-10T05:58:26.000Z</published>
    <updated>2019-04-10T06:01:58.658Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.desertsnow.jvm.ssy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> DesertSnow</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 04/10/19 12:28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClassLoader</span> <span class="keyword">extends</span> <span class="title">ClassLoader</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String classLoaderName;</span><br><span class="line">    <span class="keyword">private</span> String path;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyClassLoader</span><span class="params">(String classLoaderName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.classLoaderName = classLoaderName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyClassLoader</span><span class="params">(ClassLoader parent, String classLoaderName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(parent);</span><br><span class="line">        <span class="keyword">this</span>.classLoaderName = classLoaderName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPath</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.path = path;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt; findClass(String className) <span class="keyword">throws</span> ClassNotFoundException &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] b = loadClassData(className);</span><br><span class="line">        <span class="keyword">return</span> defineClass(className, b, <span class="number">0</span>, b.length);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">byte</span>[] loadClassData(String className) &#123;</span><br><span class="line">        <span class="keyword">if</span> (className == <span class="keyword">null</span> || <span class="string">""</span>.equals(className)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// load the class data from the connection</span></span><br><span class="line">        System.out.println(<span class="string">"Invoke loadClassData(String classname) className: "</span> + className);</span><br><span class="line">        className = className.replace(<span class="string">"."</span>, <span class="string">"\\"</span>);</span><br><span class="line">        FileInputStream fis = <span class="keyword">null</span>;</span><br><span class="line">        ByteArrayOutputStream baos = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fis = <span class="keyword">new</span> FileInputStream(<span class="keyword">new</span> File(<span class="keyword">this</span>.path + className + <span class="string">".class"</span>));</span><br><span class="line">            baos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">            <span class="keyword">int</span> b = -<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> ((b = fis.read()) != -<span class="number">1</span>) &#123;</span><br><span class="line">                baos.write(b);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> baos.toByteArray();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (baos != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    baos.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (fis != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    fis.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MyClassLoader classLoader1 = <span class="keyword">new</span> MyClassLoader(<span class="string">"loader1"</span>);</span><br><span class="line">        classLoader1.setPath(<span class="string">"C:\\Users\\markl\\JVM\\"</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class&lt;?&gt; clazz1 = classLoader1.findClass(<span class="string">"org.desertsnow.jvm.ssy.User"</span>);</span><br><span class="line">            User user1 = (User) clazz1.newInstance();</span><br><span class="line">            System.out.println(<span class="string">"user: "</span> + user1);</span><br><span class="line">            System.out.println(<span class="string">"classLoader: "</span> + user1.getClass().getClassLoader());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException | IllegalAccessException | InstantiationException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"====================================================================="</span>);</span><br><span class="line"></span><br><span class="line">        MyClassLoader classLoader2 = <span class="keyword">new</span> MyClassLoader(classLoader1, <span class="string">"loader2"</span>);</span><br><span class="line">        classLoader2.setPath(<span class="string">"C:\\Users\\markl\\JVM\\"</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class&lt;?&gt; clazz2 = classLoader2.findClass(<span class="string">"org.desertsnow.jvm.ssy.User"</span>);</span><br><span class="line">            Object obj2 = clazz2.newInstance();</span><br><span class="line">            System.out.println(obj2);</span><br><span class="line">            System.out.println(obj2.getClass().getClassLoader());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException | IllegalAccessException | InstantiationException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
      <category term="JVM" scheme="http://lovelimei.cn:4000/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>Decompile</title>
    <link href="http://lovelimei.cn:4000/2019/04/08/Decompile/"/>
    <id>http://lovelimei.cn:4000/2019/04/08/Decompile/</id>
    <published>2019-04-08T08:35:26.000Z</published>
    <updated>2019-04-08T10:22:55.534Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.desertsnow.jvm.ssy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> DesertSnow</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 04/08/19 15:22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test4</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Test4 test4 = <span class="keyword">new</span> Test4();</span><br><span class="line">        <span class="keyword">int</span> score1 = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> score2 = <span class="number">2</span>;</span><br><span class="line">        test4.record(score1);</span><br><span class="line">        test4.record(score2);</span><br><span class="line">        <span class="keyword">double</span> average = test4.getAverage();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">record</span><span class="params">(<span class="keyword">double</span> score)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getAverage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> D:\IdeaProjects\Java-Advance-Learning\src\main\java\org\desertsnow\jvm\ssy</span><br><span class="line"></span><br><span class="line">javac -g Test4.java</span><br><span class="line"></span><br><span class="line">javap -c -s -v -p -l Test4.class</span><br></pre></td></tr></table></figure><h3 id="java-g-Test4-java"><a href="#java-g-Test4-java" class="headerlink" title="java -g Test4.java"></a>java -g Test4.java</h3><p>默认情况下<em>局部变量表</em>属于调试级别的信息，javac 编译的时候并没有编译进字节码，</p><p>我们可以加上 javac -g 生成字节码的时候同时生成所有的调试信息。</p><h3 id="javac-c-Test4-class"><a href="#javac-c-Test4-class" class="headerlink" title="javac -c Test4.class"></a>javac -c Test4.class</h3><p>对类进行反编译。</p><h3 id="javac-s-Test4-class"><a href="#javac-s-Test4-class" class="headerlink" title="javac -s Test4.class"></a>javac -s Test4.class</h3><p>输出签名的类型描述符。</p><h3 id="javac-v-Test4-class"><a href="#javac-v-Test4-class" class="headerlink" title="javac -v Test4.class"></a>javac -v Test4.class</h3><p>输出更多详细的信息，比如栈大小、方法参数的个数。</p><h3 id="javac-p-Test4-class"><a href="#javac-p-Test4-class" class="headerlink" title="javac -p Test4.class"></a>javac -p Test4.class</h3><p>默认情况下，javap 会显示访问权限为 public、protected 和默认（包级 protected）级别的方法，</p><p>加上 -p 选项以后可以显示 private 方法和字段。</p><h3 id="javac-l-Test4-class"><a href="#javac-l-Test4-class" class="headerlink" title="javac -l Test4.class"></a>javac -l Test4.class</h3><p>打印字节码行号和局部变量表变量表。</p>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; org.desertsnow.jvm.ssy;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@author&lt;/span&gt; DesertSnow&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@date&lt;/span&gt; 04/08/19 15:22&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Test4&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Test4 test4 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Test4();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; score1 = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; score2 = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        test4.record(score1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        test4.record(score2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; average = test4.getAverage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; score)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getAverage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="JVM" scheme="http://lovelimei.cn:4000/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>MySQL共享锁与排他锁</title>
    <link href="http://lovelimei.cn:4000/2019/02/28/MySQL%E5%85%B1%E4%BA%AB%E9%94%81%E4%B8%8E%E6%8E%92%E4%BB%96%E9%94%81/"/>
    <id>http://lovelimei.cn:4000/2019/02/28/MySQL共享锁与排他锁/</id>
    <published>2019-02-28T07:20:17.000Z</published>
    <updated>2019-02-28T07:35:16.844Z</updated>
    
    <content type="html"><![CDATA[<p>MySQL锁机制分为表级锁和行级锁。</p><p>共享锁又称为读锁，简称S锁，顾名思义，共享锁就是多个事务对于同一数据可以共享一把锁，都能访问到数据，但是只能读不能修改。<br><a id="more"></a></p><p>排他锁又称为写锁，简称X锁，顾名思义，排他锁就是不能与其他所并存，如一个事务获取了一个数据行的排他锁，其他事务就不能再获取该行的其他锁，包括共享锁和排他锁，但是获取排他锁的事务是可以对数据就行读取和修改。</p><p>对于共享锁大家可能很好理解，就是多个事务只能读数据不能改数据。排他锁指的是一个事务在一行数据加上排他锁后，其他事务不能再在其上加其他的锁。mysql InnoDB引擎默认的修改数据语句，update,delete,insert都会自动给涉及到的数据加上排他锁，select语句默认不会加任何锁类型，如果加排他锁可以使用select …for update语句，加共享锁可以使用select … lock in share mode语句。所以加过排他锁的数据行在其他事务种是不能修改数据的，也不能通过for update和lock in share mode锁的方式查询数据，但可以直接通过select …from…查询数据，因为普通查询没有任何锁机制。</p><h2 id="Storage-Engine"><a href="#Storage-Engine" class="headerlink" title="Storage Engine"></a>Storage Engine</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">show engines;</span><br><span class="line">show variables like &apos;slow_query%&apos;;</span><br><span class="line">show variables like &apos;%storage%&apos;;</span><br><span class="line">show create table user;</span><br></pre></td></tr></table></figure><h2 id="共享锁"><a href="#共享锁" class="headerlink" title="共享锁"></a>共享锁</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">begin;</span><br><span class="line">select * from user where id = 1 lock in share mode;</span><br><span class="line">commit;</span><br><span class="line">rollback;</span><br></pre></td></tr></table></figure><h2 id="排他锁"><a href="#排他锁" class="headerlink" title="排他锁"></a>排他锁</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">begin;</span><br><span class="line">select * from user where id = 1 for update;</span><br><span class="line">commit;</span><br><span class="line">rollback;</span><br></pre></td></tr></table></figure><h2 id="排他锁-1"><a href="#排他锁-1" class="headerlink" title="排他锁"></a>排他锁</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">begin;</span><br><span class="line">update user set name = &apos;markl&apos; where id = 1;</span><br><span class="line">commit;</span><br><span class="line">rollback;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MySQL锁机制分为表级锁和行级锁。&lt;/p&gt;
&lt;p&gt;共享锁又称为读锁，简称S锁，顾名思义，共享锁就是多个事务对于同一数据可以共享一把锁，都能访问到数据，但是只能读不能修改。&lt;br&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://lovelimei.cn:4000/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot Application Events and Listeners</title>
    <link href="http://lovelimei.cn:4000/2018/11/13/Spring-Boot-Application-Events-and-Listeners/"/>
    <id>http://lovelimei.cn:4000/2018/11/13/Spring-Boot-Application-Events-and-Listeners/</id>
    <published>2018-11-13T09:23:32.000Z</published>
    <updated>2018-11-13T09:44:33.254Z</updated>
    
    <content type="html"><![CDATA[<p>In addition to the usual Spring Framework events, such as <code>ContextRefreshedEvent</code>, a SpringApplication sends some additional application events.</p><blockquote><p>Some events are actually triggered before the ApplicationContext is created, so you cannot register a listener on those as a @Bean. You can register them with the <code>SpringApplication.addListeners(…​)</code> method or the <code>SpringApplicationBuilder.listeners(…​)</code> method.</p></blockquote><blockquote><p>If you want those listeners to be registered automatically, regardless of the way the application is created, you can add a <code>META-INF/spring.factories</code> file to your project and reference your listener(s) by using the <code>org.springframework.context.ApplicationListener</code> key, as shown in the following example:</p></blockquote><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">org.springframework.context.ApplicationListener=\</span><br><span class="line">  cn.lovelimei.event.MyApplicationPreparedEventListener,\</span><br><span class="line">  cn.lovelimei.event.MyApplicationStartedEventListener,\</span><br><span class="line">  cn.lovelimei.event.MyApplicationStartingEventListener,\</span><br><span class="line">  cn.lovelimei.event.MyApplicationReadyEventListener,\</span><br><span class="line">  cn.lovelimei.event.MyApplicationFailedEventListener,\</span><br><span class="line">  cn.lovelimei.event.MyApplicationEnvironmentPreparedEventListener</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.lovelimei.event;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.event.ApplicationFailedEvent;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplicationFailedEventListener</span> <span class="keyword">implements</span> <span class="title">ApplicationListener</span>&lt;<span class="title">ApplicationFailedEvent</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onApplicationEvent</span><span class="params">(ApplicationFailedEvent event)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"......(6) ApplicationFailedEvent......"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Application events are sent in the following <strong>order</strong>, as your application runs:</p><ol><li>An <strong><code>ApplicationStartingEvent</code></strong> is sent at the start of a run but before any processing, except for the registration of listeners and initializers.</li><li>An <strong><code>ApplicationEnvironmentPreparedEvent</code></strong> is sent when the Environment to be used in the context is known but before the context is created.</li><li>An <strong><code>ApplicationPreparedEvent</code></strong> is sent just before the refresh is started but after bean definitions have been loaded.</li><li>An <strong><code>ApplicationStartedEvent</code></strong> is sent after the context has been refreshed but before any application and command-line runners have been called.</li><li>An <strong><code>ApplicationReadyEvent</code></strong> is sent after any application and command-line runners have been called. It indicates that the application is ready to service requests.</li><li>An <strong><code>ApplicationFailedEvent</code></strong> is sent if there is an exception on startup.</li></ol><p>You often need not use application events, but it can be handy to know that they exist. Internally, Spring Boot uses events to handle a variety of tasks.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;In addition to the usual Spring Framework events, such as &lt;code&gt;ContextRefreshedEvent&lt;/code&gt;, a SpringApplication sends some additional application events.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Some events are actually triggered before the ApplicationContext is created, so you cannot register a listener on those as a @Bean. You can register them with the &lt;code&gt;SpringApplication.addListeners(…​)&lt;/code&gt; method or the &lt;code&gt;SpringApplicationBuilder.listeners(…​)&lt;/code&gt; method.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;If you want those listeners to be registered automatically, regardless of the way the application is created, you can add a &lt;code&gt;META-INF/spring.factories&lt;/code&gt; file to your project and reference your listener(s) by using the &lt;code&gt;org.springframework.context.ApplicationListener&lt;/code&gt; key, as shown in the following example:&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Spring" scheme="http://lovelimei.cn:4000/categories/Spring/"/>
    
      <category term="SpringBoot" scheme="http://lovelimei.cn:4000/categories/Spring/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://lovelimei.cn:4000/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>Maven下载Spring源码报错解决方案</title>
    <link href="http://lovelimei.cn:4000/2018/11/09/cannot-download-sources-spring/"/>
    <id>http://lovelimei.cn:4000/2018/11/09/cannot-download-sources-spring/</id>
    <published>2018-11-09T07:23:37.000Z</published>
    <updated>2018-11-13T09:46:31.182Z</updated>
    
    <content type="html"><![CDATA[<p>Cannot download sources: Sources not found for: org.springframework.boot:spring-boot:2.1.0.RELEASE (2 minutes ago)</p><p>File | Settings | Build, Execution, Deployment | Build Tools | Maven</p><p>Set <strong>Maven home directory</strong> to <strong>Bundled (Maven 2)</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Cannot download sources: Sources not found for: org.springframework.boot:spring-boot:2.1.0.RELEASE (2 minutes ago)&lt;/p&gt;
&lt;p&gt;File | Settings
      
    
    </summary>
    
      <category term="Spring" scheme="http://lovelimei.cn:4000/categories/Spring/"/>
    
      <category term="SpringBoot" scheme="http://lovelimei.cn:4000/categories/Spring/SpringBoot/"/>
    
    
  </entry>
  
  <entry>
    <title>为博客文章添加置顶功能</title>
    <link href="http://lovelimei.cn:4000/2018/11/08/%E4%B8%BA%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E6%B7%BB%E5%8A%A0%E7%BD%AE%E9%A1%B6%E5%8A%9F%E8%83%BD/"/>
    <id>http://lovelimei.cn:4000/2018/11/08/为博客文章添加置顶功能/</id>
    <published>2018-11-08T08:52:21.000Z</published>
    <updated>2018-11-09T09:44:56.087Z</updated>
    
    <content type="html"><![CDATA[<p>1) 直接用下面的命令进行安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm uninstall hexo-generator-index --save</span><br><span class="line">$ npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>2) 在需要置顶的文章的Front-matter中加上top: true即可。</p><p><br>    <font color="red" size="5"><br>    到目前为止，置顶功能已经实现了。<br>    不过置顶的文章显示在最上面之后，如果没有明确的置顶标志，是不是感觉有点怪怪的呢？<br>    </font><br></p><p>3) 设置置顶标志<br>打开：/themes/next/layout/_macro目录下的post.swig文件，定位到div class=”post-meta”标签下，插入如下代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> post.top %&#125;</span><br><span class="line">  &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"fa fa-thumb-tack"</span>&gt;&lt;/i&gt;</span><br><span class="line">  &lt;font color=<span class="string">"red"</span> size=<span class="string">"5"</span>&gt;置顶&lt;<span class="regexp">/font&gt;</span></span><br><span class="line"><span class="regexp">  &lt;span class="post-meta-divider"&gt;|&lt;/</span>span&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p><font color="red" size="5">打完收工!!!</font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1) 直接用下面的命令进行安装&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm uninstall hexo-generator-index --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-generator-index-pin-top --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="置顶" scheme="http://lovelimei.cn:4000/tags/%E7%BD%AE%E9%A1%B6/"/>
    
  </entry>
  
  <entry>
    <title>&lt;font color=&quot;GREEN&quot;&gt;让hexo一直在后台运行&lt;/font&gt;</title>
    <link href="http://lovelimei.cn:4000/2018/11/08/%E8%AE%A9hexo%E4%B8%80%E7%9B%B4%E5%9C%A8%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C/"/>
    <id>http://lovelimei.cn:4000/2018/11/08/让hexo一直在后台运行/</id>
    <published>2018-11-08T02:20:42.000Z</published>
    <updated>2018-11-08T03:18:07.510Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Hexo的进程无法常驻后台，博客进程就挂了，<font color="red" size="5px">扎心有木有！</font></strong></p><p><strong>今天就给大家介绍一个方法，那就是用<font color="green" size="5px">pm2</font>来接管<font color="orange" size="5px">hexo</font>的进程。</strong></p><h3 id="1-安装pm2"><a href="#1-安装pm2" class="headerlink" title="1) 安装pm2"></a>1) 安装pm2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g pm2</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="2-写一个执行脚本"><a href="#2-写一个执行脚本" class="headerlink" title="2) 写一个执行脚本"></a>2) 写一个执行脚本</h3><p>在博客根目录下面创建一个<strong>hexo_run.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// run.js</span></span><br><span class="line"><span class="keyword">const</span> &#123;exec&#125; = <span class="built_in">require</span>(<span class="string">'child_process'</span>)</span><br><span class="line">exec(<span class="string">'hexo server'</span>, (error, stdout, stderr) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span>(error) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'exec error: $&#123;error&#125;'</span>);</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'stdout: $&#123;stdout&#125;'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'stderr: $&#123;stderr&#125;'</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="3-运行脚本"><a href="#3-运行脚本" class="headerlink" title="3) 运行脚本"></a>3) 运行脚本</h3><p>在根目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pm2 start hexo_run.js</span><br></pre></td></tr></table></figure><font color="orange" size="5"><br>Use <code>pm2 list</code> to get all  pm2 process list.<br>Use <code>pm2 del &lt;id|name&gt;</code> to stop and delete a process from pm2 process list.<br>Use <code>pm2 show &lt;id|name&gt;</code> to get more details about an app.<br>Use <code>pm2 logs run [--lines 1000]</code> to display logs.<br>Use <code>pm2 env 0</code> to display environement variables.<br>Use <code>pm2 monit</code> to monitor CPU and Memory usage run.<br></font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Hexo的进程无法常驻后台，博客进程就挂了，&lt;font color=&quot;red&quot; size=&quot;5px&quot;&gt;扎心有木有！&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;今天就给大家介绍一个方法，那就是用&lt;font color=&quot;green&quot; size=&quot;5px&quot;&gt;pm2&lt;/font&gt;来接管&lt;font color=&quot;orange&quot; size=&quot;5px&quot;&gt;hexo&lt;/font&gt;的进程。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-安装pm2&quot;&gt;&lt;a href=&quot;#1-安装pm2&quot; class=&quot;headerlink&quot; title=&quot;1) 安装pm2&quot;&gt;&lt;/a&gt;1) 安装pm2&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g pm2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://lovelimei.cn:4000/tags/hexo/"/>
    
      <category term="后台运行" scheme="http://lovelimei.cn:4000/tags/%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>Windows及Linux机器下查看端口占用</title>
    <link href="http://lovelimei.cn:4000/2018/11/06/Windows%E5%8F%8ALinux%E6%9C%BA%E5%99%A8%E4%B8%8B%E6%9F%A5%E7%9C%8B%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8/"/>
    <id>http://lovelimei.cn:4000/2018/11/06/Windows及Linux机器下查看端口占用/</id>
    <published>2018-11-06T01:40:14.000Z</published>
    <updated>2018-11-07T09:19:56.027Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Windows查看端口占用"><a href="#Windows查看端口占用" class="headerlink" title="Windows查看端口占用"></a>Windows查看端口占用</h2><ol><li><strong>查看端口3306被哪个进程占用；由下图可以看出，被进程为5004的占用</strong><a id="more"></a></li><li><strong>查看进程号为5004对应的进程；由下图可以看出，是被mysqld.exe占用了</strong><pre><code>tasklist | findstr &quot;5004&quot;mysqld.exe    5004    Services    0    183,404 K</code></pre></li><li><strong>结束进程</strong><pre><code>taskkill /f /t /im mysqld.exetasklist /fi &quot;imagename eq mysqld.exe&quot;</code></pre></li></ol><h2 id="Linux查看端口占用"><a href="#Linux查看端口占用" class="headerlink" title="Linux查看端口占用"></a>Linux查看端口占用</h2><ol><li><strong>lsof -i:4000</strong></li><li><strong>ps -ef | grep hexo</strong></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Windows查看端口占用&quot;&gt;&lt;a href=&quot;#Windows查看端口占用&quot; class=&quot;headerlink&quot; title=&quot;Windows查看端口占用&quot;&gt;&lt;/a&gt;Windows查看端口占用&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;查看端口3306被哪个进程占用；由下图可以看出，被进程为5004的占用&lt;/strong&gt;
    
    </summary>
    
    
      <category term="端口占用" scheme="http://lovelimei.cn:4000/tags/%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>工作中常用的一些小工具</title>
    <link href="http://lovelimei.cn:4000/2018/11/05/Some-tools-to-use-in-your-work/"/>
    <id>http://lovelimei.cn:4000/2018/11/05/Some-tools-to-use-in-your-work/</id>
    <published>2018-11-05T07:30:11.000Z</published>
    <updated>2018-11-06T07:11:58.100Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>The palest ink is better than the best memory.</code>（好记性不如烂笔头。）</p><h3 id="复制粘贴"><a href="#复制粘贴" class="headerlink" title="复制粘贴"></a>复制粘贴</h3><p><a href="https://ditto-cp.sourceforge.io/" target="_blank" rel="noopener">Ditto</a></p><p>快捷键：<code>Ctrl</code> + `</p><a id="more"></a><h3 id="截图工具"><a href="#截图工具" class="headerlink" title="截图工具"></a>截图工具</h3><p><code>FastStone Capture</code></p><p>快捷键：<code>Ctrl</code> + <code>PrintScreen</code></p><p>1）使用方向键移动光标</p><p>2）按回车或空格键确认角点</p><p>2）按<code>Esc</code>键取消</p><h3 id="命令工具"><a href="#命令工具" class="headerlink" title="命令工具"></a>命令工具</h3><p><code>wmic</code></p><p>打开有道词典：<code>wmic process call create &quot;E:\Program_Files\YoudaoNote\YoudaoNote.exe&quot;</code></p><p>打开谷歌浏览器： <code>wmic process call create &quot;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&quot;</code></p><p>关闭<code>CMD</code>窗口：<code>wmic process where name=&quot;cmd.exe&quot; call terminate</code></p><p>重命名文件：<code>wmic datafile &quot;E:\\aaa.txt&quot; call rename &quot;E:\\bbb.txt&quot;</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;code&gt;The palest ink is better than the best memory.&lt;/code&gt;（好记性不如烂笔头。）&lt;/p&gt;
&lt;h3 id=&quot;复制粘贴&quot;&gt;&lt;a href=&quot;#复制粘贴&quot; class=&quot;headerlink&quot; title=&quot;复制粘贴&quot;&gt;&lt;/a&gt;复制粘贴&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://ditto-cp.sourceforge.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Ditto&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;快捷键：&lt;code&gt;Ctrl&lt;/code&gt; + `&lt;/p&gt;
    
    </summary>
    
      <category term="tools" scheme="http://lovelimei.cn:4000/categories/tools/"/>
    
    
      <category term="tool" scheme="http://lovelimei.cn:4000/tags/tool/"/>
    
      <category term="tools" scheme="http://lovelimei.cn:4000/tags/tools/"/>
    
      <category term="ditto" scheme="http://lovelimei.cn:4000/tags/ditto/"/>
    
      <category term="wmic" scheme="http://lovelimei.cn:4000/tags/wmic/"/>
    
      <category term="capture" scheme="http://lovelimei.cn:4000/tags/capture/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://lovelimei.cn:4000/2017/11/04/hello-world/"/>
    <id>http://lovelimei.cn:4000/2017/11/04/hello-world/</id>
    <published>2017-11-04T07:30:11.000Z</published>
    <updated>2018-11-20T09:54:35.461Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="kafka" scheme="http://lovelimei.cn:4000/categories/kafka/"/>
    
    
  </entry>
  
</feed>
